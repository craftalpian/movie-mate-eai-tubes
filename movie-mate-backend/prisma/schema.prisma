// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id                     String        @id @unique
  full_name                   String
  nik                         String
  session_mate                session_mate? @relation(fields: [session_mateSession_mate_id], references: [session_mate_id])
  session_mateSession_mate_id String?
  favourite                   favourite?    @relation(fields: [favouriteFavourite_id], references: [favourite_id])
  favouriteFavourite_id       String?
}

model movie {
  movie_id                      String         @id
  key                           String         @unique
  title                         String
  image_url                     String
  type                          String?
  producer                      String?
  director                      String?
  writer                        String?
  production                    String?
  cast                          String?
  minute                        Int            @default(0)
  synopsis                      String?
  category                      String?
  trailer_url                   String?
  source_type                   SourceType     @default(manual)
  created_at                    DateTime       @default(now())
  updated_at                    DateTime       @default(now())
  movie_theater                 movie_theater? @relation(fields: [movie_theaterMovie_theater_id], references: [movie_theater_id])
  movie_theaterMovie_theater_id String?
  favourite                     favourite?     @relation(fields: [favouriteFavourite_id], references: [favourite_id])
  favouriteFavourite_id         String?
}

model schedule {
  schedule_id                 String          @id @unique
  movie_theater_id            movie_theater[]
  start_timestamp             DateTime
  created_at                  DateTime        @default(now())
  session_mate                session_mate?   @relation(fields: [session_mateSession_mate_id], references: [session_mate_id])
  session_mateSession_mate_id String?
}

model price {
  price_id   String    @id @unique
  day        Day       @default(sunday)
  theater_id theater[]
  price      Int
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
}

model favourite {
  favourite_id String    @id @unique
  user_id      user[]
  movie_id     movie[]
  created_at   DateTime  @default(now())
  deleted_at   DateTime?
}

model session_mate {
  session_mate_id String     @id @unique
  user_id         user[]
  schedule_id     schedule[]
  created_at      DateTime   @default(now())
}

model movie_theater {
  movie_theater_id    String    @id @unique
  theater_id          theater[]
  movie_id            movie[]
  created_at          DateTime  @default(now())
  schedule            schedule? @relation(fields: [scheduleSchedule_id], references: [schedule_id])
  scheduleSchedule_id String?
}

model theater {
  theater_id                    String         @id @unique
  city                          city[]
  name                          String
  address                       String
  created_at                    DateTime       @default(now())
  movie_theater                 movie_theater? @relation(fields: [movie_theaterMovie_theater_id], references: [movie_theater_id])
  movie_theaterMovie_theater_id String?
  price                         price?         @relation(fields: [pricePrice_id], references: [price_id])
  pricePrice_id                 String?
}

model city {
  city_id           String   @id
  city              String   @unique
  name              String
  updated_at        DateTime @default(now())
  theater           theater? @relation(fields: [theaterTheater_id], references: [theater_id])
  theaterTheater_id String?
}

enum SourceType {
  manual
  automation
}

enum Day {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}
