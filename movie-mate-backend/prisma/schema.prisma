// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model igracias {
  nim        String   @id @unique
  email      String
  full_name  String
  image_url  String?
  client_id  String
  cookie     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model api {
  api_id        String   @id
  client_id     String   @unique
  client_secret String?
  owner_name    String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
}

model movie {
  movie_id              String     @id
  key                   String     @unique
  title                 String
  movie_url             String
  image_url             String
  type                  String?
  producer              String?
  director              String?
  writer                String?
  production            String?
  cast                  String?
  minute                Int        @default(0)
  synopsis              String?
  category              String?
  category_url          String?
  trailer_url           String?
  source_type           SourceType @default(manual)
  created_at            DateTime   @default(now())
  updated_at            DateTime   @default(now())
  theater               theater[]
}

model schedule {
  schedule_id                   String         @id
  schedule_key                  String         @unique
  movie_theater_id              String
  start_timestamp               DateTime?
  start_time                    String?
  created_at                    DateTime       @default(now())
  movie_theater                 movie_theater? @relation(fields: [movie_theaterMovie_theater_id], references: [movie_theater_id])
  movie_theaterMovie_theater_id String?
}

model favourite {
  favourite_id String    @id @unique
  nim          String
  movie_id     String
  created_at   DateTime  @default(now())
  deleted_at   DateTime?
}

model session_mate {
  session_mate_id String   @id @unique
  nim             String
  schedule_id     String
  created_at      DateTime @default(now())
}

model movie_theater {
  movie_theater_id    String     @id
  key                 String     @unique
  theater_id          String
  movie_id            String
  weekday_price       Int        @default(0)
  weekend_price       Int        @default(0)
  created_at          DateTime   @default(now())
  scheduleSchedule_id String?
  theater             theater?   @relation(fields: [theaterTheater_id], references: [theater_id])
  theaterTheater_id   String?
  schedule            schedule[]
}

model theater {
  theater_id    String          @id
  theater_key   String          @unique
  city_id       String
  name          String
  theater_url   String?
  address       String?
  created_at    DateTime        @default(now())
  movie_theater movie_theater[]
  movie         movie?          @relation(fields: [movieMovie_id], references: [movie_id])
  movieMovie_id String?
  city          city?           @relation(fields: [cityCity_id], references: [city_id])
  cityCity_id   String?
}

model city {
  city_id    String    @id
  city       String    @unique
  name       String
  city_url   String?
  updated_at DateTime  @default(now())
  theater    theater[]
}

enum SourceType {
  manual
  automation
}

enum Day {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}
