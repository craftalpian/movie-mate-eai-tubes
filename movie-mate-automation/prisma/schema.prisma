generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model movie {
  movie_id              String     @id
  key                   String     @unique
  title                 String
  image_url             String
  type                  String?
  producer              String?
  director              String?
  writer                String?
  production            String?
  cast                  String?
  minute                Int        @default(0)
  synopsis              String?
  category              String?
  trailer_url           String?
  source_type           SourceType @default(manual)
  created_at            DateTime   @default(now())
  updated_at            DateTime   @default(now())
  favouriteFavourite_id String?
  category_url          String?
  movie_url             String
  favourite             favourite? @relation(fields: [favouriteFavourite_id], references: [favourite_id])
}

model city {
  city_id           String   @id
  city              String   @unique
  name              String
  updated_at        DateTime @default(now())
  theaterTheater_id String?
  city_url          String?
}

model favourite {
  favourite_id String    @id @unique
  created_at   DateTime  @default(now())
  deleted_at   DateTime?
  movie        movie[]
  user         user[]
}

model movie_theater {
  movie_theater_id    String   @id
  created_at          DateTime @default(now())
  scheduleSchedule_id String?
  weekday_price       Int      @default(0)
  weekend_price       Int      @default(0)
  movie_id            String
  theater_id          String
  key                 String   @unique
}

model schedule {
  schedule_id                 String        @id
  start_timestamp             DateTime?
  created_at                  DateTime      @default(now())
  session_mateSession_mate_id String?
  schedule_key                String        @unique
  movie_theater_id            String
  start_time                  String?
  session_mate                session_mate? @relation(fields: [session_mateSession_mate_id], references: [session_mate_id])
}

model session_mate {
  session_mate_id String     @id @unique
  created_at      DateTime   @default(now())
  schedule        schedule[]
  user            user[]
}

model theater {
  theater_id  String   @id
  name        String
  address     String?
  created_at  DateTime @default(now())
  city_id     String
  theater_url String?
  theater_key String   @unique
}

model user {
  user_id                     String        @id @unique
  full_name                   String
  nik                         String
  session_mateSession_mate_id String?
  favouriteFavourite_id       String?
  favourite                   favourite?    @relation(fields: [favouriteFavourite_id], references: [favourite_id])
  session_mate                session_mate? @relation(fields: [session_mateSession_mate_id], references: [session_mate_id])
}

enum SourceType {
  manual
  automation
}

enum Day {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}
